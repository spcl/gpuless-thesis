include "cuda_runtime_calls.fbs";
include "cublas_calls.fbs";
include "cudnn_calls.fbs";

namespace gpuless;

enum FBStatus : byte {
    OK,
    FAILURE
}

union FBCudaApiCallUnion {
    // cuda
    FBCudaMalloc,
    FBCudaMemcpyH2D,
    FBCudaMemcpyD2H,
    FBCudaMemcpyD2D,
    FBCudaMemcpyAsyncH2D,
    FBCudaMemcpyAsyncD2H,
    FBCudaMemcpyAsyncD2D,
    FBCudaLaunchKernel,
    FBCudaFree,
    FBCudaStreamSynchronize,

    // cuBLAS
    FBCublasCreateV2,
    FBCublasSetStreamV2,
    FBCublasSetMathMode,
    FBCublasSgemmV2,

    // cuDNN
    FBCudnnCreate,
    FBCudnnSetStream,
    FBCudnnCreateTensorDescriptor,
    FBCudnnSetTensorNdDescriptor,
    FBCudnnCreateFilterDescriptor,
    FBCudnnSetFilterNdDescriptor,
    FBCudnnCreateConvolutionDescriptor,
    FBCudnnSetConvolutionGroupCount ,
    FBCudnnSetConvolutionMathType,
    FBCudnnSetConvolutionNdDescriptor,
    FBCudnnGetConvolutionForwardAlgorithmV7,
    FBCudnnConvolutionForward,
    FBCudnnBatchNormalizationForwardInference,
    FBCudnnDestroyConvolutionDescriptor,
    FBCudnnDestroyFilterDescriptor,
    FBCudnnDestroyTensorDescriptor
}

table FBCudaApiCall {
    api_call:FBCudaApiCallUnion;
}

table FBNewModule {
    buffer:[uint8];
    module_id:uint64;
}

table FBNewFunction {
    symbol:string;
    module_id:uint64;
}

table FBTraceExecRequest {
    trace:[FBCudaApiCall];
    new_modules:[FBNewModule];
    new_functions:[FBNewFunction];
}

table FBTraceExecResponse {
    status:FBStatus;
    trace_top:FBCudaApiCall;
}

union FBMessage {
    FBTraceExecRequest,
    FBTraceExecResponse
}

table FBProtocolMessage {
    message:FBMessage;
}

root_type FBProtocolMessage;